[
  { "src": "{hello}", "exp": "hello" },
  { "src": "{hello {|world|}}", "exp": "hello world" },
  { "src": "{hello {||}}", "exp": "hello " },
  {
    "src": "{hello {$place}}",
    "params": { "place": "world" },
    "exp": "hello world"
  },
  {
    "src": "{hello {$place:-.}}",
    "params": { "place:-.": "world" },
    "exp": "hello world"
  },
  {
    "src": "{hello {$place}}",
    "errors": [{ "type": "unresolved-var" }],
    "exp": "hello {$place}"
  },
  {
    "src": "{{$one} and {$two}}",
    "params": { "one": 1.3, "two": 4.2 },
    "exp": "1.3 and 4.2"
  },
  {
    "src": "{{$one} et {$two}}",
    "locale": "fr",
    "params": { "one": 1.3, "two": 4.2 },
    "exp": "1,3 et 4,2"
  },
  { "src": "{hello {|4.2| :number}}", "exp": "hello 4.2" },
  {
    "src": "{hello {foo :number}}",
    "exp": "hello {|foo|}",
    "errors": [{ "type": "bad-input" }]
  },
  {
    "src": "{hello {:number}}",
    "exp": "hello {:number}",
    "errors": [{ "type": "bad-input" }]
  },
  {
    "src": "{hello {|4.2| :number minimumFractionDigits=2}}",
    "exp": "hello 4.20"
  },
  {
    "src": "{hello {|4.2| :number minimumFractionDigits=|2|}}",
    "exp": "hello 4.20"
  },
  {
    "src": "{hello {|4.2| :number minimumFractionDigits=$foo}}",
    "params": { "foo": 2 },
    "exp": "hello 4.20"
  },
  {
    "src": "{hello {|4.2| :number minimumFractionDigits=$foo}}",
    "params": { "foo": "2" },
    "exp": "hello 4.20"
  },
  {
    "src": "let $foo = {bar} {bar {$foo}}",
    "exp": "bar bar"
  },
  {
    "src": "let $foo = {|bar|} {bar {$foo}}",
    "exp": "bar bar"
  },
  {
    "src": "let $foo = {|bar|} {bar {$foo}}",
    "params": { "foo": "foo" },
    "exp": "bar bar"
  },
  {
    "src": "let $foo = {$bar} {bar {$foo}}",
    "params": { "bar": "foo" },
    "exp": "bar foo"
  },
  {
    "src": "let $foo = {$bar :number} {bar {$foo}}",
    "params": { "bar": 4.2 },
    "exp": "bar 4.2"
  },
  {
    "src": "let $foo = {$bar :number minimumFractionDigits=2} {bar {$foo}}",
    "params": { "bar": 4.2 },
    "exp": "bar 4.20"
  },
  {
    "src": "let $foo = {$bar :number minimumFractionDigits=foo} {bar {$foo}}",
    "params": { "bar": 4.2 },
    "exp": "bar {$bar}",
    "errors": [{ "type": "bad-option" }]
  },
  {
    "src": "let $foo = {$bar :number} {bar {$foo}}",
    "params": { "bar": "foo" },
    "exp": "bar {$bar}",
    "errors": [{ "type": "bad-input" }]
  },
  {
    "src": "let $foo = {$baz} let $bar = {$foo} {bar {$bar}}",
    "params": { "baz": "foo" },
    "exp": "bar foo"
  },
  {
    "src": "let $foo = {$foo} {bar {$foo}}",
    "params": { "foo": "foo" },
    "exp": "bar foo"
  },
  {
    "src": "let $foo = {$foo} let $foo = {42} {bar {$foo}}",
    "params": { "foo": "foo" },
    "exp": "bar 42"
  },
  {
    "src": "let $foo = {42} let $foo = {$foo} {bar {$foo}}",
    "params": { "foo": "foo" },
    "exp": "bar 42"
  },
  {
    "src": "let $foo = {$foo} let $foo = {42} {bar {$foo}}",
    "exp": "bar 42"
  },
  {
    "src": "let $foo = {:unknown} let $foo = {42} {bar {$foo}}",
    "exp": "bar 42"
  },
  {
    "src": "let $x = {42} let $y = {$x} let $x = {13} {{$x} {$y}}",
    "exp": "13 42"
  },
  {
    "src": "match {$foo} when |1| {one} when * {other}",
    "params": { "foo": "1" },
    "exp": "one"
  },
  {
    "src": "match {$foo} when 1 {one} when * {other}",
    "params": { "foo": 1 },
    "exp": "one"
  },
  {
    "src": "match {$foo} when 1 {one} when * {other}",
    "params": { "foo": null },
    "exp": "other",
    "errors": [{ "type": "not-selectable" }]
  },
  {
    "src": "match {$foo} when 1 {one} when * {other}",
    "exp": "other",
    "errors": [{ "type": "unresolved-var" }, { "type": "not-selectable" }]
  },
  {
    "src": "match {$foo} when one {one} when * {other}",
    "params": { "foo": 1 },
    "exp": "one"
  },
  {
    "src": "match {$foo} when 1 {=1} when one {one} when * {other}",
    "params": { "foo": 1 },
    "exp": "=1"
  },
  {
    "src": "match {$foo} when one {one} when 1 {=1} when * {other}",
    "params": { "foo": 1 },
    "exp": "=1"
  },
  {
    "src": "match {$foo} {$bar} when one one {one one} when one * {one other} when * * {other}",
    "params": { "foo": 1, "bar": 1 },
    "exp": "one one"
  },
  {
    "src": "match {$foo} {$bar} when one one {one one} when one * {one other} when * * {other}",
    "params": { "foo": 1, "bar": 2 },
    "exp": "one other"
  },
  {
    "src": "match {$foo} {$bar} when one one {one one} when one * {one other} when * * {other}",
    "params": { "foo": 2, "bar": 2 },
    "exp": "other"
  },
  {
    "src": "let $foo = {$bar :number} match {$foo} when one {one} when * {other}",
    "params": { "bar": 1 },
    "exp": "one"
  },
  {
    "src": "let $foo = {$bar :number} match {$foo} when one {one} when * {other}",
    "params": { "bar": 2 },
    "exp": "other"
  },
  {
    "src": "let $foo = {$bar} match {$foo :number} when one {one} when * {other}",
    "params": { "bar": 1 },
    "exp": "one"
  },
  {
    "src": "let $foo = {$bar} match {$foo :number} when one {one} when * {other}",
    "params": { "bar": 2 },
    "exp": "other"
  },
  {
    "src": "let $foo = {$bar} match {$foo} when one {one} when * {other}",
    "params": { "bar": 1 },
    "exp": "one"
  },
  {
    "src": "let $foo = {$bar} match {$foo} when one {one} when * {other}",
    "params": { "bar": 2 },
    "exp": "other"
  },
  {
    "src": "let $bar = {$none} match {$foo} when one {one} when * {{$bar}}",
    "params": { "foo": 1 },
    "exp": "one"
  },
  {
    "src": "let $bar = {$none} match {$foo} when one {one} when * {{$bar}}",
    "params": { "foo": 2 },
    "exp": "{$none}",
    "errors": [{ "type": "unresolved-var" }]
  },
  {
    "src": "{{+tag}}",
    "exp": "",
    "parts": [{ "type": "open", "name": "tag" }]
  },
  {
    "src": "{{+tag}content}",
    "exp": "content",
    "parts": [
      { "type": "open", "name": "tag" },
      { "type": "literal", "value": "content" }
    ]
  },
  {
    "src": "{{+tag}content{-tag}}",
    "exp": "content",
    "parts": [
      { "type": "open", "name": "tag" },
      { "type": "literal", "value": "content" },
      { "type": "close", "name": "tag" }
    ]
  },
  {
    "src": "{{-tag}content}",
    "exp": "content",
    "parts": [
      { "type": "close", "name": "tag" },
      { "type": "literal", "value": "content" }
    ]
  },
  {
    "src": "{{+tag foo=bar}}",
    "exp": "",
    "parts": [{ "type": "open", "name": "tag", "options": { "foo": "bar" } }]
  },
  {
    "src": "{{+tag foo=|foo| bar=$bar}}",
    "params": { "bar": "b a r" },
    "exp": "",
    "parts": [
      {
        "type": "open",
        "name": "tag",
        "options": { "foo": "foo", "bar": "b a r" }
      }
    ]
  },
  {
    "src": "{{|foo| +markup}}",
    "exp": "",
    "parts": [{ "type": "open", "name": "markup", "value": "foo" }]
  },
  {
    "src": "{{-tag foo=bar}}",
    "exp": "",
    "parts": [{ "type": "close", "name": "tag", "options": { "foo": "bar" } }]
  },
  {
    "src": "{unquoted {literal}}",
    "exp": "unquoted literal"
  },
  {
    "src": "match {+foo} when * {foo}",
    "exp": "foo",
    "errors": [{ "type": "not-selectable" }]
  },
  { "src": "no braces", "syntaxError": true },
  { "src": "no braces {$foo}", "syntaxError": true },
  { "src": "{missing end brace", "syntaxError": true },
  { "src": "{missing end {$brace", "syntaxError": true },
  { "src": "{extra} content", "syntaxError": true },
  { "src": "let bar = {|foo|} {{$bar}}", "syntaxError": true },
  { "src": "let $bar {|foo|} {{$bar}}", "syntaxError": true },
  { "src": "let $bar = |foo| {{$bar}}", "syntaxError": true },
  {
    "src": "let $foo = {$bar} let $bar = {$baz} {bar {$foo}}",
    "syntaxError": true
  },
  { "src": "{empty { }}", "syntaxError": true },
  { "src": "{bad {:}}", "syntaxError": true },
  { "src": "{bad {\u0000placeholder}}", "syntaxError": true },
  {
    "src": "{no-equal {|42| :number minimumFractionDigits 2}}",
    "syntaxError": true
  },
  { "src": "{bad {:placeholder option=}}", "syntaxError": true },
  { "src": "{bad {:placeholder option value}}", "syntaxError": true },
  { "src": "{bad {:placeholder option}}", "syntaxError": true },
  { "src": "{bad {$placeholder option}}", "syntaxError": true },
  { "src": "{no {$placeholder end}", "syntaxError": true },
  { "src": "match {} when * {foo}", "syntaxError": true },
  { "src": "match {|foo|} when*{foo}", "syntaxError": true },
  { "src": "match when * {foo}", "syntaxError": true },
  { "src": "match {|x|} when * foo", "syntaxError": true },
  { "src": "match {|x|} when * {foo} extra", "syntaxError": true },
  { "src": "match |x| when * {foo}", "syntaxError": true },
  { "src": "match {$foo} when * * {foo}", "syntaxError": true },
  { "src": "match {$foo} {$bar} when * {foo}", "syntaxError": true }
]
